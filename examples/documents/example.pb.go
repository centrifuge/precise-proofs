// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: examples/documents/example.proto

package documentspb

import (
	proto "github.com/centrifuge/precise-proofs/proofs/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Enum int32

const (
	Enum_type_one Enum = 0
	Enum_type_two Enum = 1
)

// Enum value maps for Enum.
var (
	Enum_name = map[int32]string{
		0: "type_one",
		1: "type_two",
	}
	Enum_value = map[string]int32{
		"type_one": 0,
		"type_two": 1,
	}
)

func (x Enum) Enum() *Enum {
	p := new(Enum)
	*p = x
	return p
}

func (x Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_examples_documents_example_proto_enumTypes[0].Descriptor()
}

func (Enum) Type() protoreflect.EnumType {
	return &file_examples_documents_example_proto_enumTypes[0]
}

func (x Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enum.Descriptor instead.
func (Enum) EnumDescriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{0}
}

type ExampleDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA          string        `protobuf:"bytes,1,opt,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB          string        `protobuf:"bytes,2,opt,name=valueB,proto3" json:"valueB,omitempty"`
	Value1          int64         `protobuf:"varint,3,opt,name=value1,proto3" json:"value1,omitempty"`
	Value2          int64         `protobuf:"varint,4,opt,name=value2,proto3" json:"value2,omitempty"`
	ValueBytes1     []byte        `protobuf:"bytes,5,opt,name=value_bytes1,json=valueBytes1,proto3" json:"value_bytes1,omitempty"`
	ValueCamelCased []byte        `protobuf:"bytes,6,opt,name=ValueCamelCased,proto3" json:"ValueCamelCased,omitempty"`
	ValueNotIgnored []byte        `protobuf:"bytes,7,opt,name=value_not_ignored,json=valueNotIgnored,proto3" json:"value_not_ignored,omitempty"`
	ValueIgnored    []byte        `protobuf:"bytes,8,opt,name=value_ignored,json=valueIgnored,proto3" json:"value_ignored,omitempty"`
	ValueNotHashed  []byte        `protobuf:"bytes,9,opt,name=value_not_hashed,json=valueNotHashed,proto3" json:"value_not_hashed,omitempty"`
	EnumType        Enum          `protobuf:"varint,10,opt,name=enum_type,json=enumType,proto3,enum=documents.Enum" json:"enum_type,omitempty"`
	ValueBool       bool          `protobuf:"varint,12,opt,name=valueBool,proto3" json:"valueBool,omitempty"`
	Name            *Name         `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	PaddingA        string        `protobuf:"bytes,14,opt,name=paddingA,proto3" json:"paddingA,omitempty"`
	PaddingB        []byte        `protobuf:"bytes,15,opt,name=paddingB,proto3" json:"paddingB,omitempty"`
	Salts           []*proto.Salt `protobuf:"bytes,11,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *ExampleDocument) Reset() {
	*x = ExampleDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleDocument) ProtoMessage() {}

func (x *ExampleDocument) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleDocument.ProtoReflect.Descriptor instead.
func (*ExampleDocument) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{0}
}

func (x *ExampleDocument) GetValueA() string {
	if x != nil {
		return x.ValueA
	}
	return ""
}

func (x *ExampleDocument) GetValueB() string {
	if x != nil {
		return x.ValueB
	}
	return ""
}

func (x *ExampleDocument) GetValue1() int64 {
	if x != nil {
		return x.Value1
	}
	return 0
}

func (x *ExampleDocument) GetValue2() int64 {
	if x != nil {
		return x.Value2
	}
	return 0
}

func (x *ExampleDocument) GetValueBytes1() []byte {
	if x != nil {
		return x.ValueBytes1
	}
	return nil
}

func (x *ExampleDocument) GetValueCamelCased() []byte {
	if x != nil {
		return x.ValueCamelCased
	}
	return nil
}

func (x *ExampleDocument) GetValueNotIgnored() []byte {
	if x != nil {
		return x.ValueNotIgnored
	}
	return nil
}

func (x *ExampleDocument) GetValueIgnored() []byte {
	if x != nil {
		return x.ValueIgnored
	}
	return nil
}

func (x *ExampleDocument) GetValueNotHashed() []byte {
	if x != nil {
		return x.ValueNotHashed
	}
	return nil
}

func (x *ExampleDocument) GetEnumType() Enum {
	if x != nil {
		return x.EnumType
	}
	return Enum_type_one
}

func (x *ExampleDocument) GetValueBool() bool {
	if x != nil {
		return x.ValueBool
	}
	return false
}

func (x *ExampleDocument) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ExampleDocument) GetPaddingA() string {
	if x != nil {
		return x.PaddingA
	}
	return ""
}

func (x *ExampleDocument) GetPaddingB() []byte {
	if x != nil {
		return x.PaddingB
	}
	return nil
}

func (x *ExampleDocument) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type AllFieldTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringValue    string                 `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	TimeStampValue *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time_stamp_value,json=timeStampValue,proto3" json:"time_stamp_value,omitempty"`
	Salts          []*proto.Salt          `protobuf:"bytes,3,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *AllFieldTypes) Reset() {
	*x = AllFieldTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllFieldTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllFieldTypes) ProtoMessage() {}

func (x *AllFieldTypes) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllFieldTypes.ProtoReflect.Descriptor instead.
func (*AllFieldTypes) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{1}
}

func (x *AllFieldTypes) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

func (x *AllFieldTypes) GetTimeStampValue() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeStampValue
	}
	return nil
}

func (x *AllFieldTypes) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type AllFieldTypesSalts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringValue    []byte        `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	TimeStampValue []byte        `protobuf:"bytes,2,opt,name=time_stamp_value,json=timeStampValue,proto3" json:"time_stamp_value,omitempty"`
	Salts          []*proto.Salt `protobuf:"bytes,3,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *AllFieldTypesSalts) Reset() {
	*x = AllFieldTypesSalts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllFieldTypesSalts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllFieldTypesSalts) ProtoMessage() {}

func (x *AllFieldTypesSalts) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllFieldTypesSalts.ProtoReflect.Descriptor instead.
func (*AllFieldTypesSalts) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{2}
}

func (x *AllFieldTypesSalts) GetStringValue() []byte {
	if x != nil {
		return x.StringValue
	}
	return nil
}

func (x *AllFieldTypesSalts) GetTimeStampValue() []byte {
	if x != nil {
		return x.TimeStampValue
	}
	return nil
}

func (x *AllFieldTypesSalts) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type SimpleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA string `protobuf:"bytes,1,opt,name=valueA,proto3" json:"valueA,omitempty"`
}

func (x *SimpleItem) Reset() {
	*x = SimpleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleItem) ProtoMessage() {}

func (x *SimpleItem) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleItem.ProtoReflect.Descriptor instead.
func (*SimpleItem) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{3}
}

func (x *SimpleItem) GetValueA() string {
	if x != nil {
		return x.ValueA
	}
	return ""
}

type RepeatedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA []*SimpleItem `protobuf:"bytes,1,rep,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB string        `protobuf:"bytes,2,opt,name=valueB,proto3" json:"valueB,omitempty"`
	Salts  []*proto.Salt `protobuf:"bytes,3,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *RepeatedItem) Reset() {
	*x = RepeatedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedItem) ProtoMessage() {}

func (x *RepeatedItem) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedItem.ProtoReflect.Descriptor instead.
func (*RepeatedItem) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{4}
}

func (x *RepeatedItem) GetValueA() []*SimpleItem {
	if x != nil {
		return x.ValueA
	}
	return nil
}

func (x *RepeatedItem) GetValueB() string {
	if x != nil {
		return x.ValueB
	}
	return ""
}

func (x *RepeatedItem) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type SimpleMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[int32]string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SimpleMap) Reset() {
	*x = SimpleMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleMap) ProtoMessage() {}

func (x *SimpleMap) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleMap.ProtoReflect.Descriptor instead.
func (*SimpleMap) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{5}
}

func (x *SimpleMap) GetValue() map[int32]string {
	if x != nil {
		return x.Value
	}
	return nil
}

type SimpleStringMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[string]string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Salts []*proto.Salt     `protobuf:"bytes,2,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *SimpleStringMap) Reset() {
	*x = SimpleStringMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleStringMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleStringMap) ProtoMessage() {}

func (x *SimpleStringMap) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleStringMap.ProtoReflect.Descriptor instead.
func (*SimpleStringMap) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{6}
}

func (x *SimpleStringMap) GetValue() map[string]string {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SimpleStringMap) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type NestedMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[int32]*SimpleMap `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Salts []*proto.Salt        `protobuf:"bytes,2,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *NestedMap) Reset() {
	*x = NestedMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedMap) ProtoMessage() {}

func (x *NestedMap) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedMap.ProtoReflect.Descriptor instead.
func (*NestedMap) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{7}
}

func (x *NestedMap) GetValue() map[int32]*SimpleMap {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *NestedMap) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type SimpleEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryKey   string `protobuf:"bytes,1,opt,name=entry_key,json=entryKey,proto3" json:"entry_key,omitempty"`
	EntryValue string `protobuf:"bytes,2,opt,name=entry_value,json=entryValue,proto3" json:"entry_value,omitempty"`
}

func (x *SimpleEntry) Reset() {
	*x = SimpleEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleEntry) ProtoMessage() {}

func (x *SimpleEntry) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleEntry.ProtoReflect.Descriptor instead.
func (*SimpleEntry) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{8}
}

func (x *SimpleEntry) GetEntryKey() string {
	if x != nil {
		return x.EntryKey
	}
	return ""
}

func (x *SimpleEntry) GetEntryValue() string {
	if x != nil {
		return x.EntryValue
	}
	return ""
}

type SimpleEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*SimpleEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Salts   []*proto.Salt  `protobuf:"bytes,2,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *SimpleEntries) Reset() {
	*x = SimpleEntries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleEntries) ProtoMessage() {}

func (x *SimpleEntries) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleEntries.ProtoReflect.Descriptor instead.
func (*SimpleEntries) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{9}
}

func (x *SimpleEntries) GetEntries() []*SimpleEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *SimpleEntries) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryKey string `protobuf:"bytes,1,opt,name=entry_key,json=entryKey,proto3" json:"entry_key,omitempty"`
	ValueA   string `protobuf:"bytes,2,opt,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB   []byte `protobuf:"bytes,3,opt,name=valueB,proto3" json:"valueB,omitempty"`
	ValueC   int64  `protobuf:"varint,4,opt,name=valueC,proto3" json:"valueC,omitempty"`
}

func (x *Entry) Reset() {
	*x = Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{10}
}

func (x *Entry) GetEntryKey() string {
	if x != nil {
		return x.EntryKey
	}
	return ""
}

func (x *Entry) GetValueA() string {
	if x != nil {
		return x.ValueA
	}
	return ""
}

func (x *Entry) GetValueB() []byte {
	if x != nil {
		return x.ValueB
	}
	return nil
}

func (x *Entry) GetValueC() int64 {
	if x != nil {
		return x.ValueC
	}
	return 0
}

type Entries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*Entry      `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Salts   []*proto.Salt `protobuf:"bytes,2,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *Entries) Reset() {
	*x = Entries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entries) ProtoMessage() {}

func (x *Entries) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entries.ProtoReflect.Descriptor instead.
func (*Entries) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{11}
}

func (x *Entries) GetEntries() []*Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *Entries) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type BytesKeyEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Value   string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BytesKeyEntry) Reset() {
	*x = BytesKeyEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesKeyEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesKeyEntry) ProtoMessage() {}

func (x *BytesKeyEntry) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesKeyEntry.ProtoReflect.Descriptor instead.
func (*BytesKeyEntry) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{12}
}

func (x *BytesKeyEntry) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *BytesKeyEntry) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BytesKeyEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*BytesKeyEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Salts   []*proto.Salt    `protobuf:"bytes,2,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *BytesKeyEntries) Reset() {
	*x = BytesKeyEntries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesKeyEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesKeyEntries) ProtoMessage() {}

func (x *BytesKeyEntries) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesKeyEntries.ProtoReflect.Descriptor instead.
func (*BytesKeyEntries) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{13}
}

func (x *BytesKeyEntries) GetEntries() []*BytesKeyEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *BytesKeyEntries) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type TwoLevelRepeatedDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA string          `protobuf:"bytes,1,opt,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB []*RepeatedItem `protobuf:"bytes,2,rep,name=valueB,proto3" json:"valueB,omitempty"`
	Salts  []*proto.Salt   `protobuf:"bytes,3,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *TwoLevelRepeatedDocument) Reset() {
	*x = TwoLevelRepeatedDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwoLevelRepeatedDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwoLevelRepeatedDocument) ProtoMessage() {}

func (x *TwoLevelRepeatedDocument) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwoLevelRepeatedDocument.ProtoReflect.Descriptor instead.
func (*TwoLevelRepeatedDocument) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{14}
}

func (x *TwoLevelRepeatedDocument) GetValueA() string {
	if x != nil {
		return x.ValueA
	}
	return ""
}

func (x *TwoLevelRepeatedDocument) GetValueB() []*RepeatedItem {
	if x != nil {
		return x.ValueB
	}
	return nil
}

func (x *TwoLevelRepeatedDocument) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type SimpleRepeatedDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA string        `protobuf:"bytes,1,opt,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB string        `protobuf:"bytes,2,opt,name=valueB,proto3" json:"valueB,omitempty"`
	ValueC []string      `protobuf:"bytes,3,rep,name=valueC,proto3" json:"valueC,omitempty"`
	Salts  []*proto.Salt `protobuf:"bytes,4,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *SimpleRepeatedDocument) Reset() {
	*x = SimpleRepeatedDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleRepeatedDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleRepeatedDocument) ProtoMessage() {}

func (x *SimpleRepeatedDocument) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleRepeatedDocument.ProtoReflect.Descriptor instead.
func (*SimpleRepeatedDocument) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{15}
}

func (x *SimpleRepeatedDocument) GetValueA() string {
	if x != nil {
		return x.ValueA
	}
	return ""
}

func (x *SimpleRepeatedDocument) GetValueB() string {
	if x != nil {
		return x.ValueB
	}
	return ""
}

func (x *SimpleRepeatedDocument) GetValueC() []string {
	if x != nil {
		return x.ValueC
	}
	return nil
}

func (x *SimpleRepeatedDocument) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type SimpleMapDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA string            `protobuf:"bytes,1,opt,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB string            `protobuf:"bytes,2,opt,name=valueB,proto3" json:"valueB,omitempty"`
	ValueC map[string]string `protobuf:"bytes,3,rep,name=valueC,proto3" json:"valueC,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ValueD map[int32]string  `protobuf:"bytes,4,rep,name=valueD,proto3" json:"valueD,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Salts  []*proto.Salt     `protobuf:"bytes,5,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *SimpleMapDocument) Reset() {
	*x = SimpleMapDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleMapDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleMapDocument) ProtoMessage() {}

func (x *SimpleMapDocument) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleMapDocument.ProtoReflect.Descriptor instead.
func (*SimpleMapDocument) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{16}
}

func (x *SimpleMapDocument) GetValueA() string {
	if x != nil {
		return x.ValueA
	}
	return ""
}

func (x *SimpleMapDocument) GetValueB() string {
	if x != nil {
		return x.ValueB
	}
	return ""
}

func (x *SimpleMapDocument) GetValueC() map[string]string {
	if x != nil {
		return x.ValueC
	}
	return nil
}

func (x *SimpleMapDocument) GetValueD() map[int32]string {
	if x != nil {
		return x.ValueD
	}
	return nil
}

func (x *SimpleMapDocument) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type TwoLevelItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA *SimpleItem   `protobuf:"bytes,1,opt,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB string        `protobuf:"bytes,2,opt,name=valueB,proto3" json:"valueB,omitempty"`
	Salts  []*proto.Salt `protobuf:"bytes,3,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *TwoLevelItem) Reset() {
	*x = TwoLevelItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwoLevelItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwoLevelItem) ProtoMessage() {}

func (x *TwoLevelItem) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwoLevelItem.ProtoReflect.Descriptor instead.
func (*TwoLevelItem) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{17}
}

func (x *TwoLevelItem) GetValueA() *SimpleItem {
	if x != nil {
		return x.ValueA
	}
	return nil
}

func (x *TwoLevelItem) GetValueB() string {
	if x != nil {
		return x.ValueB
	}
	return ""
}

func (x *TwoLevelItem) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type NestedRepeatedDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA string        `protobuf:"bytes,1,opt,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB string        `protobuf:"bytes,2,opt,name=valueB,proto3" json:"valueB,omitempty"`
	ValueC []*SimpleItem `protobuf:"bytes,3,rep,name=valueC,proto3" json:"valueC,omitempty"`
	ValueD *TwoLevelItem `protobuf:"bytes,4,opt,name=valueD,proto3" json:"valueD,omitempty"`
	Salts  []*proto.Salt `protobuf:"bytes,5,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *NestedRepeatedDocument) Reset() {
	*x = NestedRepeatedDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedRepeatedDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedRepeatedDocument) ProtoMessage() {}

func (x *NestedRepeatedDocument) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedRepeatedDocument.ProtoReflect.Descriptor instead.
func (*NestedRepeatedDocument) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{18}
}

func (x *NestedRepeatedDocument) GetValueA() string {
	if x != nil {
		return x.ValueA
	}
	return ""
}

func (x *NestedRepeatedDocument) GetValueB() string {
	if x != nil {
		return x.ValueB
	}
	return ""
}

func (x *NestedRepeatedDocument) GetValueC() []*SimpleItem {
	if x != nil {
		return x.ValueC
	}
	return nil
}

func (x *NestedRepeatedDocument) GetValueD() *TwoLevelItem {
	if x != nil {
		return x.ValueD
	}
	return nil
}

func (x *NestedRepeatedDocument) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type InvalidHashedFieldDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string        `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Salts []*proto.Salt `protobuf:"bytes,2,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *InvalidHashedFieldDocument) Reset() {
	*x = InvalidHashedFieldDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidHashedFieldDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidHashedFieldDocument) ProtoMessage() {}

func (x *InvalidHashedFieldDocument) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidHashedFieldDocument.ProtoReflect.Descriptor instead.
func (*InvalidHashedFieldDocument) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{19}
}

func (x *InvalidHashedFieldDocument) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *InvalidHashedFieldDocument) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type OneofSample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA int32 `protobuf:"varint,1,opt,name=valueA,proto3" json:"valueA,omitempty"`
	// Types that are assignable to OneofBlock:
	//	*OneofSample_ValueB
	//	*OneofSample_ValueC
	//	*OneofSample_ValueD
	OneofBlock isOneofSample_OneofBlock `protobuf_oneof:"oneofBlock"`
	ValueE     int32                    `protobuf:"varint,5,opt,name=valueE,proto3" json:"valueE,omitempty"`
	Salts      []*proto.Salt            `protobuf:"bytes,6,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *OneofSample) Reset() {
	*x = OneofSample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneofSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneofSample) ProtoMessage() {}

func (x *OneofSample) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneofSample.ProtoReflect.Descriptor instead.
func (*OneofSample) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{20}
}

func (x *OneofSample) GetValueA() int32 {
	if x != nil {
		return x.ValueA
	}
	return 0
}

func (m *OneofSample) GetOneofBlock() isOneofSample_OneofBlock {
	if m != nil {
		return m.OneofBlock
	}
	return nil
}

func (x *OneofSample) GetValueB() int32 {
	if x, ok := x.GetOneofBlock().(*OneofSample_ValueB); ok {
		return x.ValueB
	}
	return 0
}

func (x *OneofSample) GetValueC() string {
	if x, ok := x.GetOneofBlock().(*OneofSample_ValueC); ok {
		return x.ValueC
	}
	return ""
}

func (x *OneofSample) GetValueD() *SimpleItem {
	if x, ok := x.GetOneofBlock().(*OneofSample_ValueD); ok {
		return x.ValueD
	}
	return nil
}

func (x *OneofSample) GetValueE() int32 {
	if x != nil {
		return x.ValueE
	}
	return 0
}

func (x *OneofSample) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type isOneofSample_OneofBlock interface {
	isOneofSample_OneofBlock()
}

type OneofSample_ValueB struct {
	ValueB int32 `protobuf:"varint,2,opt,name=valueB,proto3,oneof"`
}

type OneofSample_ValueC struct {
	ValueC string `protobuf:"bytes,3,opt,name=valueC,proto3,oneof"`
}

type OneofSample_ValueD struct {
	ValueD *SimpleItem `protobuf:"bytes,4,opt,name=valueD,proto3,oneof"`
}

func (*OneofSample_ValueB) isOneofSample_OneofBlock() {}

func (*OneofSample_ValueC) isOneofSample_OneofBlock() {}

func (*OneofSample_ValueD) isOneofSample_OneofBlock() {}

type LongDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value0 int64         `protobuf:"varint,16,opt,name=value0,proto3" json:"value0,omitempty"`
	Value1 int64         `protobuf:"varint,1,opt,name=value1,proto3" json:"value1,omitempty"`
	Value2 int64         `protobuf:"varint,2,opt,name=value2,proto3" json:"value2,omitempty"`
	Value3 int64         `protobuf:"varint,3,opt,name=value3,proto3" json:"value3,omitempty"`
	Value4 int64         `protobuf:"varint,4,opt,name=value4,proto3" json:"value4,omitempty"`
	Value5 int64         `protobuf:"varint,5,opt,name=value5,proto3" json:"value5,omitempty"`
	Value6 int64         `protobuf:"varint,6,opt,name=value6,proto3" json:"value6,omitempty"`
	Value7 int64         `protobuf:"varint,7,opt,name=value7,proto3" json:"value7,omitempty"`
	Value8 int64         `protobuf:"varint,8,opt,name=value8,proto3" json:"value8,omitempty"`
	Value9 int64         `protobuf:"varint,9,opt,name=value9,proto3" json:"value9,omitempty"`
	ValueA int64         `protobuf:"varint,10,opt,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB int64         `protobuf:"varint,11,opt,name=valueB,proto3" json:"valueB,omitempty"`
	ValueC int64         `protobuf:"varint,12,opt,name=valueC,proto3" json:"valueC,omitempty"`
	ValueD int64         `protobuf:"varint,13,opt,name=valueD,proto3" json:"valueD,omitempty"`
	ValueE int64         `protobuf:"varint,14,opt,name=valueE,proto3" json:"valueE,omitempty"`
	Salts  []*proto.Salt `protobuf:"bytes,15,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *LongDocument) Reset() {
	*x = LongDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LongDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LongDocument) ProtoMessage() {}

func (x *LongDocument) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LongDocument.ProtoReflect.Descriptor instead.
func (*LongDocument) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{21}
}

func (x *LongDocument) GetValue0() int64 {
	if x != nil {
		return x.Value0
	}
	return 0
}

func (x *LongDocument) GetValue1() int64 {
	if x != nil {
		return x.Value1
	}
	return 0
}

func (x *LongDocument) GetValue2() int64 {
	if x != nil {
		return x.Value2
	}
	return 0
}

func (x *LongDocument) GetValue3() int64 {
	if x != nil {
		return x.Value3
	}
	return 0
}

func (x *LongDocument) GetValue4() int64 {
	if x != nil {
		return x.Value4
	}
	return 0
}

func (x *LongDocument) GetValue5() int64 {
	if x != nil {
		return x.Value5
	}
	return 0
}

func (x *LongDocument) GetValue6() int64 {
	if x != nil {
		return x.Value6
	}
	return 0
}

func (x *LongDocument) GetValue7() int64 {
	if x != nil {
		return x.Value7
	}
	return 0
}

func (x *LongDocument) GetValue8() int64 {
	if x != nil {
		return x.Value8
	}
	return 0
}

func (x *LongDocument) GetValue9() int64 {
	if x != nil {
		return x.Value9
	}
	return 0
}

func (x *LongDocument) GetValueA() int64 {
	if x != nil {
		return x.ValueA
	}
	return 0
}

func (x *LongDocument) GetValueB() int64 {
	if x != nil {
		return x.ValueB
	}
	return 0
}

func (x *LongDocument) GetValueC() int64 {
	if x != nil {
		return x.ValueC
	}
	return 0
}

func (x *LongDocument) GetValueD() int64 {
	if x != nil {
		return x.ValueD
	}
	return 0
}

func (x *LongDocument) GetValueE() int64 {
	if x != nil {
		return x.ValueE
	}
	return 0
}

func (x *LongDocument) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type Integers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA int32         `protobuf:"varint,1,opt,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB int64         `protobuf:"varint,2,opt,name=valueB,proto3" json:"valueB,omitempty"`
	ValueC uint32        `protobuf:"varint,3,opt,name=valueC,proto3" json:"valueC,omitempty"`
	ValueD uint64        `protobuf:"varint,4,opt,name=valueD,proto3" json:"valueD,omitempty"`
	ValueE int32         `protobuf:"zigzag32,5,opt,name=valueE,proto3" json:"valueE,omitempty"`
	ValueF int64         `protobuf:"zigzag64,6,opt,name=valueF,proto3" json:"valueF,omitempty"`
	ValueG uint32        `protobuf:"fixed32,7,opt,name=valueG,proto3" json:"valueG,omitempty"`
	ValueH uint64        `protobuf:"fixed64,8,opt,name=valueH,proto3" json:"valueH,omitempty"`
	ValueI int32         `protobuf:"fixed32,9,opt,name=valueI,proto3" json:"valueI,omitempty"`
	ValueJ int64         `protobuf:"fixed64,10,opt,name=valueJ,proto3" json:"valueJ,omitempty"`
	Salts  []*proto.Salt `protobuf:"bytes,11,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *Integers) Reset() {
	*x = Integers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integers) ProtoMessage() {}

func (x *Integers) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integers.ProtoReflect.Descriptor instead.
func (*Integers) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{22}
}

func (x *Integers) GetValueA() int32 {
	if x != nil {
		return x.ValueA
	}
	return 0
}

func (x *Integers) GetValueB() int64 {
	if x != nil {
		return x.ValueB
	}
	return 0
}

func (x *Integers) GetValueC() uint32 {
	if x != nil {
		return x.ValueC
	}
	return 0
}

func (x *Integers) GetValueD() uint64 {
	if x != nil {
		return x.ValueD
	}
	return 0
}

func (x *Integers) GetValueE() int32 {
	if x != nil {
		return x.ValueE
	}
	return 0
}

func (x *Integers) GetValueF() int64 {
	if x != nil {
		return x.ValueF
	}
	return 0
}

func (x *Integers) GetValueG() uint32 {
	if x != nil {
		return x.ValueG
	}
	return 0
}

func (x *Integers) GetValueH() uint64 {
	if x != nil {
		return x.ValueH
	}
	return 0
}

func (x *Integers) GetValueI() int32 {
	if x != nil {
		return x.ValueI
	}
	return 0
}

func (x *Integers) GetValueJ() int64 {
	if x != nil {
		return x.ValueJ
	}
	return 0
}

func (x *Integers) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type ContainSalts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA string        `protobuf:"bytes,1,opt,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB int32         `protobuf:"varint,2,opt,name=valueB,proto3" json:"valueB,omitempty"`
	Salts  []*proto.Salt `protobuf:"bytes,3,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *ContainSalts) Reset() {
	*x = ContainSalts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainSalts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainSalts) ProtoMessage() {}

func (x *ContainSalts) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainSalts.ProtoReflect.Descriptor instead.
func (*ContainSalts) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{23}
}

func (x *ContainSalts) GetValueA() string {
	if x != nil {
		return x.ValueA
	}
	return ""
}

func (x *ContainSalts) GetValueB() int32 {
	if x != nil {
		return x.ValueB
	}
	return 0
}

func (x *ContainSalts) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type ExampleWithoutSalts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA string `protobuf:"bytes,1,opt,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB int32  `protobuf:"varint,2,opt,name=valueB,proto3" json:"valueB,omitempty"`
}

func (x *ExampleWithoutSalts) Reset() {
	*x = ExampleWithoutSalts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleWithoutSalts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleWithoutSalts) ProtoMessage() {}

func (x *ExampleWithoutSalts) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleWithoutSalts.ProtoReflect.Descriptor instead.
func (*ExampleWithoutSalts) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{24}
}

func (x *ExampleWithoutSalts) GetValueA() string {
	if x != nil {
		return x.ValueA
	}
	return ""
}

func (x *ExampleWithoutSalts) GetValueB() int32 {
	if x != nil {
		return x.ValueB
	}
	return 0
}

type Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First string `protobuf:"bytes,1,opt,name=first,proto3" json:"first,omitempty"`
	Last  string `protobuf:"bytes,2,opt,name=last,proto3" json:"last,omitempty"`
}

func (x *Name) Reset() {
	*x = Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{25}
}

func (x *Name) GetFirst() string {
	if x != nil {
		return x.First
	}
	return ""
}

func (x *Name) GetLast() string {
	if x != nil {
		return x.Last
	}
	return ""
}

type PhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Countrycode string `protobuf:"bytes,2,opt,name=countrycode,proto3" json:"countrycode,omitempty"`
	Number      string `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *PhoneNumber) Reset() {
	*x = PhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneNumber) ProtoMessage() {}

func (x *PhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneNumber.ProtoReflect.Descriptor instead.
func (*PhoneNumber) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{26}
}

func (x *PhoneNumber) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PhoneNumber) GetCountrycode() string {
	if x != nil {
		return x.Countrycode
	}
	return ""
}

func (x *PhoneNumber) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

type ExampleNested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashedValue []byte `protobuf:"bytes,1,opt,name=hashed_value,json=hashedValue,proto3" json:"hashed_value,omitempty"`
	Name        *Name  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ExampleNested) Reset() {
	*x = ExampleNested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleNested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleNested) ProtoMessage() {}

func (x *ExampleNested) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleNested.ProtoReflect.Descriptor instead.
func (*ExampleNested) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{27}
}

func (x *ExampleNested) GetHashedValue() []byte {
	if x != nil {
		return x.HashedValue
	}
	return nil
}

func (x *ExampleNested) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

type AppendFieldDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *Name          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Names        []*Name        `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	PhoneNumbers []*PhoneNumber `protobuf:"bytes,3,rep,name=phone_numbers,json=phoneNumbers,proto3" json:"phone_numbers,omitempty"`
}

func (x *AppendFieldDocument) Reset() {
	*x = AppendFieldDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendFieldDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendFieldDocument) ProtoMessage() {}

func (x *AppendFieldDocument) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendFieldDocument.ProtoReflect.Descriptor instead.
func (*AppendFieldDocument) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{28}
}

func (x *AppendFieldDocument) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *AppendFieldDocument) GetNames() []*Name {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *AppendFieldDocument) GetPhoneNumbers() []*PhoneNumber {
	if x != nil {
		return x.PhoneNumbers
	}
	return nil
}

type UnsupportedAppendDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *Name          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Nested *ExampleNested `protobuf:"bytes,2,opt,name=nested,proto3" json:"nested,omitempty"`
}

func (x *UnsupportedAppendDocument) Reset() {
	*x = UnsupportedAppendDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsupportedAppendDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsupportedAppendDocument) ProtoMessage() {}

func (x *UnsupportedAppendDocument) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsupportedAppendDocument.ProtoReflect.Descriptor instead.
func (*UnsupportedAppendDocument) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{29}
}

func (x *UnsupportedAppendDocument) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *UnsupportedAppendDocument) GetNested() *ExampleNested {
	if x != nil {
		return x.Nested
	}
	return nil
}

type NoSaltDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueNoSalt string `protobuf:"bytes,1,opt,name=valueNoSalt,proto3" json:"valueNoSalt,omitempty"`
	ValueSalt   string `protobuf:"bytes,2,opt,name=valueSalt,proto3" json:"valueSalt,omitempty"`
	Name        *Name  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NoSaltDocument) Reset() {
	*x = NoSaltDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoSaltDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoSaltDocument) ProtoMessage() {}

func (x *NoSaltDocument) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoSaltDocument.ProtoReflect.Descriptor instead.
func (*NoSaltDocument) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{30}
}

func (x *NoSaltDocument) GetValueNoSalt() string {
	if x != nil {
		return x.ValueNoSalt
	}
	return ""
}

func (x *NoSaltDocument) GetValueSalt() string {
	if x != nil {
		return x.ValueSalt
	}
	return ""
}

func (x *NoSaltDocument) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

type ExampleWithPaddingField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueA string        `protobuf:"bytes,1,opt,name=valueA,proto3" json:"valueA,omitempty"`
	ValueB []byte        `protobuf:"bytes,2,opt,name=valueB,proto3" json:"valueB,omitempty"`
	Salts  []*proto.Salt `protobuf:"bytes,3,rep,name=salts,proto3" json:"salts,omitempty"`
}

func (x *ExampleWithPaddingField) Reset() {
	*x = ExampleWithPaddingField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleWithPaddingField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleWithPaddingField) ProtoMessage() {}

func (x *ExampleWithPaddingField) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleWithPaddingField.ProtoReflect.Descriptor instead.
func (*ExampleWithPaddingField) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{31}
}

func (x *ExampleWithPaddingField) GetValueA() string {
	if x != nil {
		return x.ValueA
	}
	return ""
}

func (x *ExampleWithPaddingField) GetValueB() []byte {
	if x != nil {
		return x.ValueB
	}
	return nil
}

func (x *ExampleWithPaddingField) GetSalts() []*proto.Salt {
	if x != nil {
		return x.Salts
	}
	return nil
}

type NamePadded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First string `protobuf:"bytes,1,opt,name=first,proto3" json:"first,omitempty"`
	Last  string `protobuf:"bytes,2,opt,name=last,proto3" json:"last,omitempty"`
	Age   int32  `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
}

func (x *NamePadded) Reset() {
	*x = NamePadded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamePadded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamePadded) ProtoMessage() {}

func (x *NamePadded) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamePadded.ProtoReflect.Descriptor instead.
func (*NamePadded) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{32}
}

func (x *NamePadded) GetFirst() string {
	if x != nil {
		return x.First
	}
	return ""
}

func (x *NamePadded) GetLast() string {
	if x != nil {
		return x.Last
	}
	return ""
}

func (x *NamePadded) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

type AppendFieldPaddingDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []*NamePadded `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *AppendFieldPaddingDocument) Reset() {
	*x = AppendFieldPaddingDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_documents_example_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendFieldPaddingDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendFieldPaddingDocument) ProtoMessage() {}

func (x *AppendFieldPaddingDocument) ProtoReflect() protoreflect.Message {
	mi := &file_examples_documents_example_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendFieldPaddingDocument.ProtoReflect.Descriptor instead.
func (*AppendFieldPaddingDocument) Descriptor() ([]byte, []int) {
	return file_examples_documents_example_proto_rawDescGZIP(), []int{33}
}

func (x *AppendFieldPaddingDocument) GetNames() []*NamePadded {
	if x != nil {
		return x.Names
	}
	return nil
}

var File_examples_documents_example_proto protoreflect.FileDescriptor

var file_examples_documents_example_proto_rawDesc = []byte{
	0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x61, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb0, 0x04, 0x0a, 0x0f, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x32, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x31, 0x12, 0x28, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x43, 0x61, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x43, 0x61, 0x73,
	0x65, 0x64, 0x12, 0x31, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f,
	0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0xa0,
	0xc1, 0xf5, 0x0a, 0x00, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x6f, 0x74, 0x49, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0xa0, 0xc1,
	0xf5, 0x0a, 0x01, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x64, 0x12, 0x2f, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0xa8, 0xc1, 0xf5,
	0x0a, 0x01, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x65, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x65, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x2a,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x05, 0xc0,
	0xc1, 0xf5, 0x0a, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x08, 0x70, 0x61,
	0x64, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0xb0, 0xc1,
	0xf5, 0x0a, 0x20, 0x52, 0x08, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x12, 0x21, 0x0a,
	0x08, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x05, 0xb0, 0xc1, 0xf5, 0x0a, 0x20, 0x52, 0x08, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x42,
	0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05, 0x73,
	0x61, 0x6c, 0x74, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05, 0x73, 0x61,
	0x6c, 0x74, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x12, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x53, 0x61, 0x6c, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e,
	0x53, 0x61, 0x6c, 0x74, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x22, 0x24, 0x0a, 0x0a, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x41, 0x22, 0x79, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x2d, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73,
	0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x22, 0x7c, 0x0a, 0x09,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x38, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x42,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x42, 0x05, 0xb0, 0xc1, 0xf5, 0x0a, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52,
	0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xb6, 0x01, 0x0a, 0x09, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x35,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x4d, 0x61, 0x70, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61,
	0x6c, 0x74, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x1a, 0x4e, 0x0a, 0x0a, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a, 0x0b, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7a, 0x0a, 0x0d, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x13, 0xb0, 0xc1, 0xf5, 0x0a, 0x20, 0xba, 0xc1, 0xf5, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x6b, 0x65, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05, 0x73, 0x61, 0x6c,
	0x74, 0x73, 0x22, 0x6c, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x41, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x43, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43,
	0x22, 0x6e, 0x0a, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x13,
	0xb0, 0xc1, 0xf5, 0x0a, 0x20, 0xba, 0xc1, 0xf5, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x6b, 0x65, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x05,
	0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73,
	0x22, 0x3f, 0x0a, 0x0d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x7c, 0x0a, 0x0f, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x11, 0xb0, 0xc1, 0xf5, 0x0a, 0x14, 0xba, 0xc1, 0xf5, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x73,
	0x61, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x22,
	0x87, 0x01, 0x0a, 0x18, 0x54, 0x77, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x41, 0x12, 0x2f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61,
	0x6c, 0x74, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x12, 0x22, 0x0a, 0x05,
	0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73,
	0x22, 0xe8, 0x02, 0x0a, 0x11, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x47, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x05, 0xb0, 0xc1, 0xf5, 0x0a, 0x20, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x12,
	0x40, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x4d, 0x61, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x44, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x44, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05,
	0x73, 0x61, 0x6c, 0x74, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x79, 0x0a, 0x0c, 0x54,
	0x77, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52,
	0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x16, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x12, 0x2d, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43,
	0x12, 0x2f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x77, 0x6f,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x44, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05,
	0x73, 0x61, 0x6c, 0x74, 0x73, 0x22, 0x5d, 0x0a, 0x1a, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x48, 0x61, 0x73, 0x68, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x05, 0xa8, 0xc1, 0xf5, 0x0a, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05, 0x73,
	0x61, 0x6c, 0x74, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x0b, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x12, 0x18, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x18, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43,
	0x12, 0x2f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x42, 0x0c, 0x0a,
	0x0a, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x9a, 0x03, 0x0a, 0x0c,
	0x4c, 0x6f, 0x6e, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x30, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x33, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x33, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x35, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x35, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x37, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x37, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x39, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x39, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x41, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x43, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x45, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61, 0x6c,
	0x74, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x22, 0x9e, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x46, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x47, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x07, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x47, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x18, 0x08, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4a, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x10, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x4a, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x53, 0x61,
	0x6c, 0x74, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x22, 0x62, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x53, 0x61, 0x6c, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x41, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x22, 0x45, 0x0a,
	0x13, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x53,
	0x61, 0x6c, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x22, 0x30, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x5e, 0x0a, 0x0d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0xa8, 0xc1, 0xf5, 0x0a,
	0x01, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x05, 0xc0, 0xc1, 0xf5, 0x0a,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x05, 0xc0, 0xc1, 0xf5, 0x0a, 0x01, 0x52, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x42, 0x13, 0xb0, 0xc1, 0xf5, 0x0a, 0x04, 0xba, 0xc1, 0xf5, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0xc0, 0xc1, 0xf5, 0x0a, 0x01, 0x52, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x19, 0x55, 0x6e, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x42, 0x05, 0xc0, 0xc1, 0xf5, 0x0a, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x37, 0x0a, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x05, 0xc0, 0xc1, 0xf5,
	0x0a, 0x01, 0x52, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x0e, 0x4e,
	0x6f, 0x53, 0x61, 0x6c, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a,
	0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x6f, 0x53, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x05, 0xc8, 0xc1, 0xf5, 0x0a, 0x01, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x4e, 0x6f, 0x53, 0x61, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53,
	0x61, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x61, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x42, 0x05, 0xc8, 0xc1, 0xf5, 0x0a, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x7b, 0x0a, 0x17, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x50,
	0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0xb0, 0xc1, 0xf5,
	0x0a, 0x20, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x12, 0x1d, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0xb0, 0xc1, 0xf5, 0x0a,
	0x20, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x61, 0x6c,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x73, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x74, 0x73, 0x22, 0x56, 0x0a,
	0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x05, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0xb0, 0xc1, 0xf5, 0x0a,
	0x0a, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0xb0, 0xc1, 0xf5, 0x0a, 0x0a, 0x52, 0x04, 0x6c,
	0x61, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x61, 0x67, 0x65, 0x22, 0x50, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x50, 0x61, 0x64, 0x64, 0x65, 0x64, 0x42, 0x05, 0xc0, 0xc1, 0xf5, 0x0a, 0x01,
	0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x2a, 0x22, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12,
	0x0c, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x77, 0x6f, 0x10, 0x01, 0x42, 0x63, 0x0a, 0x0d, 0x63,
	0x6f, 0x6d, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0c, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x42, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x66,
	0x75, 0x67, 0x65, 0x2f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x73, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x3b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_examples_documents_example_proto_rawDescOnce sync.Once
	file_examples_documents_example_proto_rawDescData = file_examples_documents_example_proto_rawDesc
)

func file_examples_documents_example_proto_rawDescGZIP() []byte {
	file_examples_documents_example_proto_rawDescOnce.Do(func() {
		file_examples_documents_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_examples_documents_example_proto_rawDescData)
	})
	return file_examples_documents_example_proto_rawDescData
}

var file_examples_documents_example_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_examples_documents_example_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_examples_documents_example_proto_goTypes = []interface{}{
	(Enum)(0),                          // 0: documents.Enum
	(*ExampleDocument)(nil),            // 1: documents.ExampleDocument
	(*AllFieldTypes)(nil),              // 2: documents.AllFieldTypes
	(*AllFieldTypesSalts)(nil),         // 3: documents.AllFieldTypesSalts
	(*SimpleItem)(nil),                 // 4: documents.SimpleItem
	(*RepeatedItem)(nil),               // 5: documents.RepeatedItem
	(*SimpleMap)(nil),                  // 6: documents.SimpleMap
	(*SimpleStringMap)(nil),            // 7: documents.SimpleStringMap
	(*NestedMap)(nil),                  // 8: documents.NestedMap
	(*SimpleEntry)(nil),                // 9: documents.SimpleEntry
	(*SimpleEntries)(nil),              // 10: documents.SimpleEntries
	(*Entry)(nil),                      // 11: documents.Entry
	(*Entries)(nil),                    // 12: documents.Entries
	(*BytesKeyEntry)(nil),              // 13: documents.BytesKeyEntry
	(*BytesKeyEntries)(nil),            // 14: documents.BytesKeyEntries
	(*TwoLevelRepeatedDocument)(nil),   // 15: documents.TwoLevelRepeatedDocument
	(*SimpleRepeatedDocument)(nil),     // 16: documents.SimpleRepeatedDocument
	(*SimpleMapDocument)(nil),          // 17: documents.SimpleMapDocument
	(*TwoLevelItem)(nil),               // 18: documents.TwoLevelItem
	(*NestedRepeatedDocument)(nil),     // 19: documents.NestedRepeatedDocument
	(*InvalidHashedFieldDocument)(nil), // 20: documents.InvalidHashedFieldDocument
	(*OneofSample)(nil),                // 21: documents.oneofSample
	(*LongDocument)(nil),               // 22: documents.LongDocument
	(*Integers)(nil),                   // 23: documents.Integers
	(*ContainSalts)(nil),               // 24: documents.ContainSalts
	(*ExampleWithoutSalts)(nil),        // 25: documents.ExampleWithoutSalts
	(*Name)(nil),                       // 26: documents.Name
	(*PhoneNumber)(nil),                // 27: documents.PhoneNumber
	(*ExampleNested)(nil),              // 28: documents.ExampleNested
	(*AppendFieldDocument)(nil),        // 29: documents.AppendFieldDocument
	(*UnsupportedAppendDocument)(nil),  // 30: documents.UnsupportedAppendDocument
	(*NoSaltDocument)(nil),             // 31: documents.NoSaltDocument
	(*ExampleWithPaddingField)(nil),    // 32: documents.ExampleWithPaddingField
	(*NamePadded)(nil),                 // 33: documents.NamePadded
	(*AppendFieldPaddingDocument)(nil), // 34: documents.AppendFieldPaddingDocument
	nil,                                // 35: documents.SimpleMap.ValueEntry
	nil,                                // 36: documents.SimpleStringMap.ValueEntry
	nil,                                // 37: documents.NestedMap.ValueEntry
	nil,                                // 38: documents.SimpleMapDocument.ValueCEntry
	nil,                                // 39: documents.SimpleMapDocument.ValueDEntry
	(*proto.Salt)(nil),                 // 40: proofs.Salt
	(*timestamppb.Timestamp)(nil),      // 41: google.protobuf.Timestamp
}
var file_examples_documents_example_proto_depIdxs = []int32{
	0,  // 0: documents.ExampleDocument.enum_type:type_name -> documents.Enum
	26, // 1: documents.ExampleDocument.name:type_name -> documents.Name
	40, // 2: documents.ExampleDocument.salts:type_name -> proofs.Salt
	41, // 3: documents.AllFieldTypes.time_stamp_value:type_name -> google.protobuf.Timestamp
	40, // 4: documents.AllFieldTypes.salts:type_name -> proofs.Salt
	40, // 5: documents.AllFieldTypesSalts.salts:type_name -> proofs.Salt
	4,  // 6: documents.RepeatedItem.valueA:type_name -> documents.SimpleItem
	40, // 7: documents.RepeatedItem.salts:type_name -> proofs.Salt
	35, // 8: documents.SimpleMap.value:type_name -> documents.SimpleMap.ValueEntry
	36, // 9: documents.SimpleStringMap.value:type_name -> documents.SimpleStringMap.ValueEntry
	40, // 10: documents.SimpleStringMap.salts:type_name -> proofs.Salt
	37, // 11: documents.NestedMap.value:type_name -> documents.NestedMap.ValueEntry
	40, // 12: documents.NestedMap.salts:type_name -> proofs.Salt
	9,  // 13: documents.SimpleEntries.entries:type_name -> documents.SimpleEntry
	40, // 14: documents.SimpleEntries.salts:type_name -> proofs.Salt
	11, // 15: documents.Entries.entries:type_name -> documents.Entry
	40, // 16: documents.Entries.salts:type_name -> proofs.Salt
	13, // 17: documents.BytesKeyEntries.entries:type_name -> documents.BytesKeyEntry
	40, // 18: documents.BytesKeyEntries.salts:type_name -> proofs.Salt
	5,  // 19: documents.TwoLevelRepeatedDocument.valueB:type_name -> documents.RepeatedItem
	40, // 20: documents.TwoLevelRepeatedDocument.salts:type_name -> proofs.Salt
	40, // 21: documents.SimpleRepeatedDocument.salts:type_name -> proofs.Salt
	38, // 22: documents.SimpleMapDocument.valueC:type_name -> documents.SimpleMapDocument.ValueCEntry
	39, // 23: documents.SimpleMapDocument.valueD:type_name -> documents.SimpleMapDocument.ValueDEntry
	40, // 24: documents.SimpleMapDocument.salts:type_name -> proofs.Salt
	4,  // 25: documents.TwoLevelItem.valueA:type_name -> documents.SimpleItem
	40, // 26: documents.TwoLevelItem.salts:type_name -> proofs.Salt
	4,  // 27: documents.NestedRepeatedDocument.valueC:type_name -> documents.SimpleItem
	18, // 28: documents.NestedRepeatedDocument.valueD:type_name -> documents.TwoLevelItem
	40, // 29: documents.NestedRepeatedDocument.salts:type_name -> proofs.Salt
	40, // 30: documents.InvalidHashedFieldDocument.salts:type_name -> proofs.Salt
	4,  // 31: documents.oneofSample.valueD:type_name -> documents.SimpleItem
	40, // 32: documents.oneofSample.salts:type_name -> proofs.Salt
	40, // 33: documents.LongDocument.salts:type_name -> proofs.Salt
	40, // 34: documents.Integers.salts:type_name -> proofs.Salt
	40, // 35: documents.ContainSalts.salts:type_name -> proofs.Salt
	26, // 36: documents.ExampleNested.name:type_name -> documents.Name
	26, // 37: documents.AppendFieldDocument.name:type_name -> documents.Name
	26, // 38: documents.AppendFieldDocument.names:type_name -> documents.Name
	27, // 39: documents.AppendFieldDocument.phone_numbers:type_name -> documents.PhoneNumber
	26, // 40: documents.UnsupportedAppendDocument.name:type_name -> documents.Name
	28, // 41: documents.UnsupportedAppendDocument.nested:type_name -> documents.ExampleNested
	26, // 42: documents.NoSaltDocument.name:type_name -> documents.Name
	40, // 43: documents.ExampleWithPaddingField.salts:type_name -> proofs.Salt
	33, // 44: documents.AppendFieldPaddingDocument.names:type_name -> documents.NamePadded
	6,  // 45: documents.NestedMap.ValueEntry.value:type_name -> documents.SimpleMap
	46, // [46:46] is the sub-list for method output_type
	46, // [46:46] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_examples_documents_example_proto_init() }
func file_examples_documents_example_proto_init() {
	if File_examples_documents_example_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_examples_documents_example_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllFieldTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllFieldTypesSalts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleStringMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleEntries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesKeyEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesKeyEntries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwoLevelRepeatedDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleRepeatedDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleMapDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwoLevelItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedRepeatedDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidHashedFieldDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneofSample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LongDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainSalts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleWithoutSalts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleNested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendFieldDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsupportedAppendDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoSaltDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleWithPaddingField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamePadded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_documents_example_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendFieldPaddingDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_examples_documents_example_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*OneofSample_ValueB)(nil),
		(*OneofSample_ValueC)(nil),
		(*OneofSample_ValueD)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_examples_documents_example_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_examples_documents_example_proto_goTypes,
		DependencyIndexes: file_examples_documents_example_proto_depIdxs,
		EnumInfos:         file_examples_documents_example_proto_enumTypes,
		MessageInfos:      file_examples_documents_example_proto_msgTypes,
	}.Build()
	File_examples_documents_example_proto = out.File
	file_examples_documents_example_proto_rawDesc = nil
	file_examples_documents_example_proto_goTypes = nil
	file_examples_documents_example_proto_depIdxs = nil
}
