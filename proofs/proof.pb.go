// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proofs/proof.proto

package proofs // import "github.com/centrifuge/precise-proofs/proofs"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MerkleHash struct {
	Left                 []byte   `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right                []byte   `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerkleHash) Reset()         { *m = MerkleHash{} }
func (m *MerkleHash) String() string { return proto.CompactTextString(m) }
func (*MerkleHash) ProtoMessage()    {}
func (*MerkleHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_proof_ed5472a0cbcf4a00, []int{0}
}
func (m *MerkleHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleHash.Unmarshal(m, b)
}
func (m *MerkleHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleHash.Marshal(b, m, deterministic)
}
func (dst *MerkleHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleHash.Merge(dst, src)
}
func (m *MerkleHash) XXX_Size() int {
	return xxx_messageInfo_MerkleHash.Size(m)
}
func (m *MerkleHash) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleHash.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleHash proto.InternalMessageInfo

func (m *MerkleHash) GetLeft() []byte {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *MerkleHash) GetRight() []byte {
	if m != nil {
		return m.Right
	}
	return nil
}

type Proof struct {
	Property             string        `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	Value                string        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Salt                 []byte        `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
	Hashes               []*MerkleHash `protobuf:"bytes,4,rep,name=hashes,proto3" json:"hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Proof) Reset()         { *m = Proof{} }
func (m *Proof) String() string { return proto.CompactTextString(m) }
func (*Proof) ProtoMessage()    {}
func (*Proof) Descriptor() ([]byte, []int) {
	return fileDescriptor_proof_ed5472a0cbcf4a00, []int{1}
}
func (m *Proof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proof.Unmarshal(m, b)
}
func (m *Proof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proof.Marshal(b, m, deterministic)
}
func (dst *Proof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proof.Merge(dst, src)
}
func (m *Proof) XXX_Size() int {
	return xxx_messageInfo_Proof.Size(m)
}
func (m *Proof) XXX_DiscardUnknown() {
	xxx_messageInfo_Proof.DiscardUnknown(m)
}

var xxx_messageInfo_Proof proto.InternalMessageInfo

func (m *Proof) GetProperty() string {
	if m != nil {
		return m.Property
	}
	return ""
}

func (m *Proof) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Proof) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *Proof) GetHashes() []*MerkleHash {
	if m != nil {
		return m.Hashes
	}
	return nil
}

func init() {
	proto.RegisterType((*MerkleHash)(nil), "proofs.MerkleHash")
	proto.RegisterType((*Proof)(nil), "proofs.Proof")
}

func init() { proto.RegisterFile("proofs/proof.proto", fileDescriptor_proof_ed5472a0cbcf4a00) }

var fileDescriptor_proof_ed5472a0cbcf4a00 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x4f, 0xc1, 0x4a, 0xc4, 0x30,
	0x14, 0x64, 0xdd, 0xdd, 0xe2, 0x3e, 0x3d, 0x3d, 0x3c, 0x04, 0x4f, 0xcb, 0x9e, 0x8a, 0xd2, 0x14,
	0x14, 0xfc, 0x00, 0x4f, 0x5e, 0x04, 0xc9, 0xd1, 0x5b, 0x5a, 0x5e, 0x9b, 0x60, 0x34, 0xe1, 0x25,
	0x15, 0xfa, 0xf7, 0x92, 0x44, 0x74, 0x4f, 0x99, 0x19, 0x32, 0x6f, 0x66, 0x00, 0x03, 0x7b, 0x3f,
	0xc5, 0xbe, 0x3c, 0x32, 0xb0, 0x4f, 0x1e, 0x9b, 0xaa, 0x9d, 0x9e, 0x00, 0x5e, 0x89, 0x3f, 0x1c,
	0xbd, 0xe8, 0x68, 0x10, 0x61, 0xe7, 0x68, 0x4a, 0x62, 0x73, 0xdc, 0xb4, 0xd7, 0xaa, 0x60, 0xbc,
	0x81, 0x3d, 0xdb, 0xd9, 0x24, 0x71, 0x51, 0xc4, 0x4a, 0x4e, 0x2b, 0xec, 0xdf, 0xf2, 0x05, 0xbc,
	0x85, 0xcb, 0xc0, 0x3e, 0x10, 0xa7, 0xb5, 0xd8, 0x0e, 0xea, 0x8f, 0x67, 0xeb, 0xb7, 0x76, 0x0b,
	0x15, 0xeb, 0x41, 0x55, 0x92, 0x43, 0xa2, 0x76, 0x49, 0x6c, 0x6b, 0x48, 0xc6, 0x78, 0x07, 0x8d,
	0xd1, 0xd1, 0x50, 0x14, 0xbb, 0xe3, 0xb6, 0xbd, 0x7a, 0x40, 0x59, 0xfb, 0xc9, 0xff, 0x72, 0xea,
	0xf7, 0xc7, 0x73, 0xf7, 0x7e, 0x3f, 0xdb, 0x64, 0x96, 0x41, 0x8e, 0xfe, 0xb3, 0x1f, 0xe9, 0x2b,
	0xb1, 0x9d, 0x96, 0x99, 0xfa, 0xc0, 0x34, 0xda, 0x48, 0xdd, 0xf9, 0xdc, 0x38, 0x34, 0x65, 0xf0,
	0xe3, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x36, 0x3c, 0x23, 0x5d, 0x06, 0x01, 0x00, 0x00,
}
