syntax = "proto3";

package proofs;

option go_package = "proofspb";
option java_multiple_files = true;
option java_outer_classname = "ProofProto";
option java_package = "com.proofs";

import "google/protobuf/descriptor.proto";

extend google.protobuf.FieldOptions {
  bool exclude_from_tree = 2862100;
  bool hashed_field = 2862101;
  uint64 key_length = 2862102;
  string mapping_key = 2862103;
}

message MerkleHash {
  bytes left = 1;
  bytes right = 2;
}

message Proof {
  oneof property {
    string readable_name = 7;
    bytes compact_name = 9;
  }
  string value = 2;
  bytes salt = 3;
  // hash is filled if value & salt are not available
  bytes hash = 6;
  // Fills either 'hashes' for standard Merkle trees or 'sorted_hashes' for a lexicograhical ordered of a node hash
  // not both
  repeated MerkleHash hashes = 4;
  repeated bytes sorted_hashes = 5;
}
